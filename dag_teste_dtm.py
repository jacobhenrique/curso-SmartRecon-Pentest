# Importando as bibliotecas que vamos usar nesse exemplo
from airflow import DAG
from datetime import datetime, timedelta
from airflow.decorators import task
from airflow.operators.python import ExternalPythonOperator, PythonVirtualenvOperator
from airflow.operators.bash import BashOperator
from airflow.operators.empty import EmptyOperator

global default_arg
arg = "teste"


@task(task_id="retorna_lista")
def retorna_lista():
    return['businesscorp.com.br', 'rh.businesscorp.com.br']

@task(task_id="retorna_dic")
def retorna_dic():
    return{'businesscorp.com.br': '1.1.1.1', 'rh.businesscorp.com.br':'2.2.2.2'}

@task(task_id="inicio")
def inicio():
    print('inicio')

@task(task_id='fim', trigger_rule="all_done")
def fim():
    print('fim')

@task(task_id="dinamica_task", trigger_rule="all_done")
def task1(arg):
    print(arg)

@task(task_id="dinamica_task_dic", trigger_rule="all_done")
def task2(arg):
    print(arg)

default_args = {'owner': 'teste','depends_on_past':False,'start_date':datetime(2024,1,1),'retries':0 }

#Para o agendamento usar o parametro schedule_interval=timedelta(minutes=60)
with DAG('dag-teste-_dtm', catchup=False, default_args=default_args) as dag:
    t0 = inicio()
    t1 = task1.expand(arg = retorna_lista())
    t2 = task2.expand(arg = retorna_dic())
    t3 = fim()

t0 >> [t1 , t2] >> t3
